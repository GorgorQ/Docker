name: deploy
on:
  push:
    branches:
      - main
      - develop
  pull_request:

jobs:
  test-backend:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and test with Maven
        run: |
          cd "TP_1/Backend API"
          mvn clean verify

  build-and-push-docker-image:
    needs: test-backend
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Build frontend
        run: |
          cd front-end
          npm install
          npm run build

      - name: Build image and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./TP_1/Backend API
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push database
        uses: docker/build-push-action@v6
        with:
          context: ./TP_1/Database
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database:latest
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Build image and push httpd
        uses: docker/build-push-action@v6
        with:
          context: ./TP_1/Http server
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd:latest
          push: ${{ github.ref == 'refs/heads/main' }}

  deploy-to-production:
    needs: build-and-push-docker-image
    runs-on: ubuntu-24.04
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install Ansible and dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-venv python3-pip sshpass
          python3 -m pip install --upgrade pip
          pip install "ansible>=8.0"
          ansible-galaxy collection install community.docker --force

      - name: Create vault password file
        run: |
          echo "${{ secrets.ANSIBLE_VAULT_PASSWORD }}" > .vault_pass
          chmod 600 .vault_pass

      - name: Deploy with Ansible
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i TP_3/ansible/inventories/setup.yml TP_3/ansible/playbook.yml --vault-password-file .vault_pass -e "image_tag=latest image_name=${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-simple-api db_image_tag=latest db_image_name=${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-database httpd_image_tag=latest httpd_image_name=${{ secrets.DOCKERHUB_USERNAME }}/tp-devops-httpd"